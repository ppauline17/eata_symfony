security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                # "app_login" is the name of the route created previously
                login_path: app_login
                check_path: app_login
                default_target_path: app_admin_index
            logout:
                path: app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_INFOS, ROLE_ACCUEILS, ROLE_ASSO,  ROLE_ENFANT, ROLE_PARENT]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
          # role infos
        - { path: ^/administration/accueil, roles: [ROLE_INFOS] }
        - { path: ^/administration/informations, roles: [ROLE_INFOS] }
        - { path: ^/article/actualités, roles: [ROLE_INFOS] }
          # role accueils
        - { path: ^/administration/périscolaire, roles: [ROLE_ACCUEILS] }
        - { path: ^/administration/mercredi, roles: [ROLE_ACCUEILS] }
        - { path: ^/administration/loisirs, roles: [ROLE_ACCUEILS] }
        - { path: ^/information/app_page_periscolaire, roles: [ROLE_ACCUEILS] }
        - { path: ^/information/app_page_mercredi, roles: [ROLE_ACCUEILS] }
        - { path: ^/information/app_page_loisirs, roles: [ROLE_ACCUEILS] }
        - { path: ^/equipe/périscolaire, roles: [ROLE_ACCUEILS] }
        - { path: ^/equipe/mercredi, roles: [ROLE_ACCUEILS] }
        - { path: ^/equipe/loisirs, roles: [ROLE_ACCUEILS] }
        - { path: ^/document/périscolaire, roles: [ROLE_ACCUEILS] }
        - { path: ^/document/mercredi, roles: [ROLE_ACCUEILS] }
        - { path: ^/document/loisirs, roles: [ROLE_ACCUEILS] }
        # role asso
        - { path: ^/administration/association, roles: [ROLE_ASSO] }
        - { path: ^/information/app_page_association, roles: [ROLE_ASSO] }
        - { path: ^/equipe/association, roles: [ROLE_ASSO] }
        - { path: ^/document/association, roles: [ROLE_ASSO] }
        - { path: ^/recadrer, roles: [ROLE_ASSO] }
        # role enfant
        - { path: ^/administration/enfants, roles: [ROLE_ENFANT] }
        - { path: ^/article/activités, roles: [ROLE_ENFANT] }
        - { path: ^/article/recettes, roles: [ROLE_ENFANT] }
        - { path: ^/article/dessins, roles: [ROLE_ENFANT] }
        - { path: ^/article/projets, roles: [ROLE_ENFANT] }
        # role parent
        - { path: ^/administration/parents, roles: [ROLE_PARENT] }
        - { path: ^/article/bons, roles: [ROLE_PARENT] }
        - { path: ^/article/conseils, roles: [ROLE_PARENT] }
        - { path: ^/article/évènements, roles: [ROLE_PARENT] }
        - { path: ^/article/album, roles: [ROLE_PARENT] }

        - { path: ^/article, roles: [ROLE_INFOS, ROLE_ENFANT, ROLE_PARENT] }
        - { path: ^/equipe, roles: [ROLE_ACCUEILS, ROLE_ASSO] }
        - { path: ^/information, roles: [ROLE_ACCUEILS, ROLE_ASSO, ROLE_INFOS] }
        - { path: ^/utilisateur/liste, roles: [ROLE_ADMIN] }
        - { path: ^/register, roles: [ROLE_ADMIN] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
